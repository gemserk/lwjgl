2007-04-29 20:22  elias_naur

	* src/java/org/lwjgl/opengl/BaseReferences.java,
	  src/java/org/lwjgl/opengl/GLChecks.java,
	  src/java/org/lwjgl/opengl/StateTracker.java,
	  src/java/org/lwjgl/util/generator/ReferencesGeneratorProcessorFactory.java,
	  src/templates/org/lwjgl/opengl/ARB_buffer_object.java,
	  src/templates/org/lwjgl/opengl/GL15.java: Re-implemented VBO
	  buffer binding caches to speed up gl*Pointer calls. Patch by
	  MatthiasM.

2007-04-29 19:38  elias_naur

	* src/java/org/lwjgl/opengl/Util.java,
	  src/java/org/lwjgl/test/opengl/shaders/Shader.java: Removed
	  Util.glGetInteger convenience method since it is not thread safe

2007-04-28 20:10  elias_naur

	* src/java/org/lwjgl/opengl/Display.java: Make sure the swap
	  interval is reset in Display when switching Display modes and
	  toggling fullscreen

2007-04-26 07:13  elias_naur

	* build.xml: Reverted accidental build.xml change

2007-04-26 06:55  elias_naur

	* src/java/org/lwjgl/test/input/KeyboardTest.java: Added output of
	  character code value to KeyboardTest

2007-04-26 05:58  elias_naur

	* build.xml, src/native/common/org_lwjgl_openal_ALC10.c: Simplified
	  ALC10.nalcOpenDevice

2007-04-24 14:41  elias_naur

	* src/java/org/lwjgl/opengl/WindowsDisplay.java,
	  src/java/org/lwjgl/opengl/WindowsKeyboard.java,
	  src/native/windows/org_lwjgl_opengl_Display.c: Windows: Use
	  TranslateMessage and WM_CHAR to receive character input instead
	  of manual translation. This change fixes composed characters.

2007-04-24 14:13  elias_naur

	* src/java/org/lwjgl/opengl/WindowsDisplay.java: Windows: Call
	  default handler on key events

2007-04-24 13:41  elias_naur

	* src/java/org/lwjgl/opengl/Display.java,
	  src/java/org/lwjgl/opengl/WindowsKeyboard.java: Removed debug
	  output

2007-04-24 13:40  elias_naur

	* src/java/org/lwjgl/opengl/WindowsDisplay.java,
	  src/java/org/lwjgl/opengl/WindowsKeyboard.java,
	  src/java/org/lwjgl/opengl/WindowsKeycodes.java,
	  src/native/windows/org_lwjgl_opengl_WindowsKeyboard.c: Windows:
	  Convert WindowsKeyboard to use windows messages instead of
	  DirectInput.

2007-04-24 13:22  elias_naur

	* src/java/org/lwjgl/opengl/WindowsAWTInput.java: Compile fix

2007-04-24 09:30  elias_naur

	* src/java/org/lwjgl/Sys.java,
	  src/java/org/lwjgl/opengl/WindowsAWTInput.java,
	  src/java/org/lwjgl/opengl/WindowsDirectInputMouse.java,
	  src/java/org/lwjgl/opengl/WindowsDisplay.java,
	  src/java/org/lwjgl/opengl/WindowsMouse.java,
	  src/native/common/common_tools.c,
	  src/native/common/common_tools.h,
	  src/native/windows/org_lwjgl_input_Cursor.c,
	  src/native/windows/org_lwjgl_opengl_Display.c: Windows: Remove
	  dependency on DirectInput for WindowsMouse used by
	  WindowsDisplay. Keyboard conversion coming up. Reasons:
	  
	  1. DirectInput is deprecated
	  (http://en.wikipedia.org/wiki/DirectInput). Specifically,
	  Microsoft recommends using regular windows messages for keyboard
	  and mouse input.
	  2. Not using DirectInput enable us to use the Raw Input JInput
	  plugin to access multiple mice (and keyboards).
	  3. We're already using windows messages for features DirectInput
	  never supported, so by removing DirectInput dependency, we get
	  rid of some special case code.
	  4. When we're only using windows messages for input, we're
	  (theoretically) more compatible than with a dependency on a
	  properly working DirectInput.

2007-04-23 20:50  elias_naur

	* src/native/windows/org_lwjgl_opengl_Display.c: Windows: Fixed
	  NULL check in native setupCursorClipping

2007-04-23 20:17  elias_naur

	* src/java/org/lwjgl/NondirectBufferWrapper.java,
	  src/java/org/lwjgl/util/generator/JavaMethodsGenerator.java,
	  src/java/org/lwjgl/util/generator/OutParameter.java,
	  src/templates/org/lwjgl/openal/AL10.java,
	  src/templates/org/lwjgl/openal/AL11.java,
	  src/templates/org/lwjgl/opengl/ARB_buffer_object.java,
	  src/templates/org/lwjgl/opengl/ARB_imaging.java,
	  src/templates/org/lwjgl/opengl/ARB_occlusion_query.java,
	  src/templates/org/lwjgl/opengl/ARB_program.java,
	  src/templates/org/lwjgl/opengl/ARB_shader_objects.java,
	  src/templates/org/lwjgl/opengl/ARB_texture_compression.java,
	  src/templates/org/lwjgl/opengl/ARB_vertex_program.java,
	  src/templates/org/lwjgl/opengl/ARB_vertex_shader.java,
	  src/templates/org/lwjgl/opengl/ATI_envmap_bumpmap.java,
	  src/templates/org/lwjgl/opengl/ATI_vertex_array_object.java,
	  src/templates/org/lwjgl/opengl/ATI_vertex_attrib_array_object.java,
	  src/templates/org/lwjgl/opengl/EXT_draw_buffers2.java,
	  src/templates/org/lwjgl/opengl/EXT_framebuffer_object.java,
	  src/templates/org/lwjgl/opengl/EXT_gpu_shader4.java,
	  src/templates/org/lwjgl/opengl/EXT_paletted_texture.java,
	  src/templates/org/lwjgl/opengl/EXT_texture_integer.java,
	  src/templates/org/lwjgl/opengl/EXT_timer_query.java,
	  src/templates/org/lwjgl/opengl/EXT_vertex_shader.java,
	  src/templates/org/lwjgl/opengl/GL11.java,
	  src/templates/org/lwjgl/opengl/GL13.java,
	  src/templates/org/lwjgl/opengl/GL15.java,
	  src/templates/org/lwjgl/opengl/GL20.java,
	  src/templates/org/lwjgl/opengl/NV_evaluators.java,
	  src/templates/org/lwjgl/opengl/NV_fence.java,
	  src/templates/org/lwjgl/opengl/NV_fragment_program.java,
	  src/templates/org/lwjgl/opengl/NV_gpu_program4.java,
	  src/templates/org/lwjgl/opengl/NV_occlusion_query.java,
	  src/templates/org/lwjgl/opengl/NV_program.java,
	  src/templates/org/lwjgl/opengl/NV_register_combiners.java,
	  src/templates/org/lwjgl/opengl/NV_register_combiners2.java,
	  src/templates/org/lwjgl/opengl/NV_transform_feedback.java,
	  src/templates/org/lwjgl/opengl/NV_vertex_program.java: Added
	  support for non-direct in glGet* style functions

2007-04-23 16:47  elias_naur

	* src/java/org/lwjgl/input/Cursor.java: Added support for
	  non-direct buffers to Cursor

2007-04-22 21:29  elias_naur

	* src/java/org/lwjgl/opengl/ReferencesStack.java,
	  src/java/org/lwjgl/opengl/StateStack.java,
	  src/java/org/lwjgl/opengl/StateTracker.java: Inline optimizations
	  to state trackers by MatthiasM

2007-04-19 23:13  matzon

	* src/native/common/org_lwjgl_openal_ALC11.c: fixing warnings

2007-04-19 23:02  matzon

	* src/native/common/common_tools.c,
	  src/native/common/org_lwjgl_openal_ALC10.c: fixing warnings

2007-04-19 22:58  matzon

	* src/native/common/org_lwjgl_openal_ALC.c: removing ALC

2007-04-19 22:54  matzon

	* src/java/org/lwjgl/openal/ALC10.java: re-enabled missing ALC
	  error check

2007-04-19 22:53  matzon

	* build.xml: removed ALC from javah
	  added AL11 to generate-openal

2007-04-19 22:49  matzon

	* src/native/common/org_lwjgl_openal_ALC10.c: removed some null
	  checks

2007-04-19 22:44  matzon

	* src/java/org/lwjgl/test/openal/ALCCaptureTest.java: output
	  capture devices

2007-04-19 22:43  matzon

	* src/java/org/lwjgl/openal/ALC11.java: remove debug

2007-04-19 22:39  matzon

	* src/native/common/devil/org_lwjgl_devil_IL.c,
	  src/native/common/devil/org_lwjgl_devil_ILU.c,
	  src/native/common/devil/org_lwjgl_devil_ILUT.c,
	  src/native/common/fmod3/org_lwjgl_fmod3_FMOD.c,
	  src/native/common/fmod3/org_lwjgl_fmod3_FMusic.c,
	  src/native/common/fmod3/org_lwjgl_fmod3_FSound.c: using
	  NewStringNativeWithLength

2007-04-19 22:26  matzon

	* src/java/org/lwjgl/openal/ALC.java: updated to ALC10 instead of
	  ALC

2007-04-19 22:25  matzon

	* src/java/org/lwjgl/openal/ALC10.java: updated to ALC10 instead of
	  ALC

2007-04-19 22:25  matzon

	* src/java/org/lwjgl/openal/ALC11.java: openal 1.1

2007-04-19 22:24  matzon

	* src/java/org/lwjgl/openal/AL.java: exposing context and device
	  updated to ALC10 instead of ALC
	  removed getImplementations - alcGetString now works as "expected"

2007-04-19 22:23  matzon

	* src/java/org/lwjgl/openal/Util.java: updated to ALC10 instead of
	  ALC

2007-04-19 22:23  matzon

	* src/java/org/lwjgl/openal/ALCcontext.java,
	  src/java/org/lwjgl/openal/ALCdevice.java: exposing context and
	  device

2007-04-19 22:23  matzon

	* src/java/org/lwjgl/test/openal/ALCTest.java,
	  src/java/org/lwjgl/test/openal/BasicTest.java: updated to ALC10
	  instead of ALC

2007-04-19 22:22  matzon

	* src/java/org/lwjgl/test/openal/ALCCaptureTest.java: Capture test
	  for OpenAL 1.1

2007-04-19 22:21  matzon

	* src/templates/org/lwjgl/openal/AL11.java: openal 1.1

2007-04-19 22:21  matzon

	* src/templates/org/lwjgl/openal/AL10.java: AL_SOURCE_TYPE changed
	  value ...

2007-04-19 22:21  matzon

	* src/native/windows/org_lwjgl_Sys.c,
	  src/native/windows/org_lwjgl_opengl_WindowsRegistry.c: using
	  NewStringNativeWithLength

2007-04-19 22:20  matzon

	* src/native/windows/dinputhelper.c: using
	  NewStringNativeWithLength

2007-04-19 22:20  matzon

	* src/native/common/org_lwjgl_openal_ALC10.c,
	  src/native/common/org_lwjgl_openal_ALC11.c: openal 1.1
	  exposing device and context

2007-04-19 22:18  matzon

	* src/native/common/common_tools.c,
	  src/native/common/common_tools.h: using NewStringNativeWithLength

2007-04-19 12:00  elias_naur

	* libs/jinput.jar: JInput update

2007-04-19 08:24  elias_naur

	* build.xml: Removed reference to generated code in build.xml

2007-04-19 07:42  elias_naur

	* src/java/org/lwjgl/opengl/GLChecks.java: Cut VBO/PBO sanity
	  checks from two to one glGetInteger call by exploiting GL enum
	  value aliasing (once again inspired by MatthiasM). Additionally,
	  support PBO calls added in OpenGL 2.1.

2007-04-15 19:43  elias_naur

	* src/java/org/lwjgl/BufferChecks.java,
	  src/java/org/lwjgl/NondirectBufferWrapper.java,
	  src/java/org/lwjgl/util/generator/JavaMethodsGenerator.java: Move
	  null parameter checks from check classes to the generated
	  classes, since calculateImageSize assumes the buffer being
	  non-null

2007-04-15 19:33  elias_naur

	* src/java/org/lwjgl/BufferUtils.java,
	  src/java/org/lwjgl/opengl/GLChecks.java,
	  src/templates/org/lwjgl/opengl/GL11.java,
	  src/templates/org/lwjgl/opengl/GL12.java: Don't add border when
	  checking image sizes

2007-04-11 20:32  matzon

	* build.xml, src/java/org/lwjgl/Sys.java,
	  src/java/org/lwjgl/devil/ILNative.java,
	  src/java/org/lwjgl/fmod3/FMOD.java: 1.1 version string

2007-04-11 17:30  elias_naur

	* src/java/org/lwjgl/BufferChecks.java,
	  src/java/org/lwjgl/NondirectBufferWrapper.java,
	  src/java/org/lwjgl/test/opengl/Gears.java,
	  src/java/org/lwjgl/util/generator/GeneratorVisitor.java,
	  src/java/org/lwjgl/util/generator/JavaMethodsGenerator.java:
	  Added support for non-direct buffers for all functions that
	  doesn't cache the buffer address at the native side (e.g.
	  glVertexPointer). Reasons:
	  
	  1. We can now support calls like "glLight(..., ...,
	  FloatBuffer.wrap(new float[] {...}));" without worrying about
	  running out of direct memory heap,
	  since both the FloatBuffer and the array are allocated on the
	  java heap. Future JVMs with stack allocation support could
	  improve this even further.
	  2. We avoid getting in the way of users that doesn't (yet) know
	  why direct buffers are important.
	  
	  Obviously, we'd like direct support for arrays, but non-direct
	  buffers are a nice compromise that avoids the API bloat that
	  results when almost all
	  functions gain an overloaded versions that take arrays instead of
	  buffers.
	  
	  Notes:
	  
	  1. Non-direct buffer support should not affect the performance in
	  the direct buffer case, since the non-direct buffer code path is
	  only activated
	  when the isDirect() check fails, and we were already checking
	  isDirect() for sanity checking.
	  2. When using non-direct buffers, the buffer contents
	  (remaining() bytes) are copied to a resizable ThreadLocal cached
	  direct buffer (which is
	  resized as needed) and used instead of the non-direct buffer.
	  Thus, performance of non-direct buffers is lower than direct
	  buffers.

2007-04-11 16:13  elias_naur

	* src/java/org/lwjgl/BufferChecks.java,
	  src/java/org/lwjgl/util/generator/JavaMethodsGenerator.java:
	  Moved null check from generated code to BufferChecks and removed
	  unused buffer checks

2007-04-08 21:33  elias_naur

	* platform_build/macosx_ant/build.xml: Mac OS X: Fix native
	  compilation error by forcing all native source to be Objective C.
	  This is needed the jawt headers use Objective C features

2007-04-07 19:10  matzon

	* build.xml, src/java/org/lwjgl/Sys.java,
	  src/java/org/lwjgl/devil/ILNative.java,
	  src/java/org/lwjgl/fmod3/FMOD.java: 1.0.1 version string

2007-04-03 10:06  elias_naur

	* build.xml, src/generated, src/native/generated: Removed generated
	  files from version control - all platforms have support for the
	  java 1.5 apt tool

2007-04-03 08:21  elias_naur

	* src/generated/org/lwjgl/opengl/ContextCapabilities.java,
	  src/generated/org/lwjgl/opengl/EXTGpuProgramParameters.java,
	  src/native/generated/org_lwjgl_opengl_EXTGpuProgramParameters.c:
	  Updated generated files

2007-04-03 08:16  elias_naur

	* src/templates/org/lwjgl/opengl/EXT_gpu_program_parameters.java:
	  Fixed typo in EXT_gpu_program_parameters

2007-03-30 19:35  elias_naur

	* src/java/org/lwjgl/opengl/WindowsDisplay.java: Windows: Correct
	  testing of wParam when a WM_SYSCOMMAND is received

2007-03-30 19:00  elias_naur

	* src/native/common/common_tools.c: Windows: Native compile fixes

2007-03-22 14:05  elias_naur

	* src/java/org/lwjgl/opengl/WindowsRegistry.java: WindowsRegistry:
	  Make sure the native library is loaded by calling
	  Sys.initialize()

2007-03-13 08:18  elias_naur

	* src/native/common/awt_tools.h,
	  src/native/common/org_lwjgl_opengl_AWTSurfaceLock.c,
	  src/native/linux/org_lwjgl_opengl_Display.c,
	  src/native/linux/org_lwjgl_opengl_LinuxAWTGLCanvasPeerInfo.c,
	  src/native/macosx/org_lwjgl_opengl_MacOSXCanvasPeerInfo.m,
	  src/native/windows/org_lwjgl_opengl_WindowsAWTGLCanvasPeerInfo.c:
	  Use jawt_md.h instead of jawt.h since that is apparently the
	  official way of using JAWT (from the example in jawt.h) and is
	  required for lwjgl to compile with the ibm 1.5 jdk

2007-03-09 14:34  elias_naur

	* src/native/common/common_tools.c: Added error checking to
	  getBooleanProperty

2007-03-09 14:28  elias_naur

	* src/native/common/common_tools.c: Added error checking to
	  NewStringNative

2007-03-06 14:48  elias_naur

	* platform_build/linux_ant/build.xml: Linux: Don't statically link
	  Xrender, Xrandr, Xcursor and Xfixes to
	  avoid bugs in older versions of the libraries being exposed in
	  newer
	  linux distributions based on XCB (like Ubuntu Feisty).

2007-02-25 21:52  elias_naur

	* libs/jinput.jar, libs/macosx/libjinput-osx.jnilib: Updated
	  jinput.jar and libjinput.jnilib to the latest version

2007-02-24 18:41  elias_naur

	* src/java/org/lwjgl/opengl/Pbuffer.java: Added a Pbuffer
	  constructor that omits the RenderTexture parameter, and added a
	  note that FBOs should be used instead, if available.
	  Render-to-texture pbuffers can only be available on Windows
	  platforms and is thus not portable.

2007-02-23 10:14  elias_naur

	* src/java/org/lwjgl/opengl/LinuxDisplay.java,
	  src/native/linux/org_lwjgl_opengl_Display.c: Linux: When creating
	  a window don't loop waiting for the MapNotify event. Instead,
	  make sure we don't immediately go from fullscreen to minimized by
	  checking if the window has been focused at least once before
	  minimizing (and resetting display mode).

2007-02-23 08:31  elias_naur

	* src/native/linux/org_lwjgl_opengl_Display.c: Linux: Don't call
	  XSetInputFocus when creating a window. XSetInputFocus can fail if
	  the window is not mapped when calling it, and it seems that it's
	  rude to call XSetInputFocus according to the ICCCM when the
	  application doesn't already have the focus in one of its
	  subwindows.

2007-02-23 08:21  elias_naur

	* src/native/linux/org_lwjgl_opengl_Display.c: Linux: Don't use
	  XClearWindow to clear the window, but rely on the OpenGL clearing
	  instead. Also, remove redundant attributes in XCreateWindow

2007-02-21 13:44  spasi

	* src/generated/org/lwjgl/opengl/ContextCapabilities.java,
	  src/templates/org/lwjgl/opengl/NV_geometry_shader4.java: Added
	  NV_geometry_shader4

2007-02-17 09:49  elias_naur

	* src/native/windows/context.c: Windows: Don't exclude
	  PFD_GENERIC_ACCELERATED formats when selecting pixel formats.
	  Hopefully this will enable LWJGL to use the directx emulated
	  opengl implementation on vista

2007-02-12 12:18  elias_naur

	* src/java/org/lwjgl/input/Cursor.java,
	  src/java/org/lwjgl/input/Keyboard.java,
	  src/java/org/lwjgl/input/Mouse.java,
	  src/java/org/lwjgl/input/OpenGLPackageAccess.java,
	  src/java/org/lwjgl/opengl/Display.java,
	  src/java/org/lwjgl/opengl/GlobalLock.java,
	  src/java/org/lwjgl/opengl/MacOSXDisplay.java,
	  src/java/org/lwjgl/opengl/WindowsDisplay.java: Make the rest of
	  LWJGL thread safe. No attempt have been done to make the locking
	  minimal. Instead, one global lock is shared by Display, Mouse,
	  Keyboard and Cursor. The lock surrounds all public methods.